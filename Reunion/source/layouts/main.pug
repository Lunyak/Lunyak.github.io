include /organisms/header/header
include /organisms/footer/footer
include /molecules/popup/popup

-
  loadAssets = function(file) {
    const req = require.context(
      "../assets/",
      true, // Load files recursively. Pass false to skip recursion.
      /^\.\/.*\.(svg|jpg|png)$/ // Match files ending with .md.
    );
    if (file.indexOf('.svg') !== -1) {
      return '<svg><use xlink:href="'+req(file).symbol+'"/></svg>';
    }
    return req(file);
  }

  filterCss = function(css) {
    let result = false;
    htmlWebpackPlugin.options.chunks.forEach(function($ch) {
      if (css.file.indexOf($ch) !== -1) {
        result = true;
      }
    })
    return result;
  }

block vars
doctype html
html(lang='ru')
  head
    meta(charset='UTF-8')
    meta(name='viewport', content='width=device-width, initial-scale=1.0, user-scalable=no')
    meta(http-equiv='X-UA-Compatible', content='ie=edge')
    link(href='./favicon.ico', rel='shortcut icon', type='image/x-icon')
    if (page && page.meta && page.meta.title)
      title= page.meta.title
    each css in htmlWebpackPlugin.files.css
      link(rel='stylesheet', href=css)
    if (htmlWebpackPlugin.files.extracted && htmlWebpackPlugin.files.extracted.css)
      each css in htmlWebpackPlugin.files.extracted.css.filter(filterCss).reverse()
        link(rel='stylesheet', href=('../' + css.file), media=css.query)

  body
    .page
      if (page && page.header)
        +header({info:page.header})
      block content
    if (page && page.footer)
      +footer({info:page.footer})
    +popup
    each js in htmlWebpackPlugin.files.js
      script(type='text/javascript', src=js, async, defer)
